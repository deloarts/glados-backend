"""first-revision

Revision ID: bcb5660f3d54
Revises: 
Create Date: 2023-02-13 17:45:35.951815

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "bcb5660f3d54"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "apikey",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("api_key", sa.String(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("expiration_date", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("api_key"),
        sa.UniqueConstraint("name"),
    )
    with op.batch_alter_table("apikey", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_apikey_id"), ["id"], unique=True)

    op.create_table(
        "emailnotification",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("reason", sa.String(), nullable=False),
        sa.Column("receiver_id", sa.Integer(), nullable=False),
        sa.Column("bought_item_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("emailnotification", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_emailnotification_id"), ["id"], unique=True
        )

    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("personal_access_token", sa.String(), nullable=True),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column(
            "is_systemuser", sa.Boolean(), server_default=sa.text("0"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_user_email"), ["email"], unique=True)
        batch_op.create_index(
            batch_op.f("ix_user_full_name"), ["full_name"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_user_id"), ["id"], unique=True)
        batch_op.create_index(batch_op.f("ix_user_username"), ["username"], unique=True)

    op.create_table(
        "boughtitem",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created", sa.Date(), nullable=False),
        sa.Column("changed", sa.Date(), nullable=True),
        sa.Column("changes", sa.PickleType(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "high_priority", sa.Boolean(), server_default=sa.text("0"), nullable=False
        ),
        sa.Column("notify_on_delivery", sa.Boolean(), nullable=False),
        sa.Column("group_1", sa.String(), nullable=True),
        sa.Column("project", sa.String(), nullable=False),
        sa.Column("machine", sa.String(), nullable=True),
        sa.Column("quantity", sa.Float(), nullable=False),
        sa.Column("unit", sa.String(), nullable=False),
        sa.Column("partnumber", sa.String(), nullable=False),
        sa.Column("definition", sa.String(), nullable=False),
        sa.Column("supplier", sa.String(), nullable=True),
        sa.Column("manufacturer", sa.String(), nullable=False),
        sa.Column("note_general", sa.String(), nullable=True),
        sa.Column("note_supplier", sa.String(), nullable=True),
        sa.Column("desired_delivery_date", sa.Date(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("requester_id", sa.Integer(), nullable=True),
        sa.Column("requested_date", sa.Date(), nullable=True),
        sa.Column("orderer_id", sa.Integer(), nullable=True),
        sa.Column("ordered_date", sa.Date(), nullable=True),
        sa.Column("expected_delivery_date", sa.Date(), nullable=True),
        sa.Column("taken_over_id", sa.Integer(), nullable=True),
        sa.Column("delivery_date", sa.Date(), nullable=True),
        sa.Column("storage_place", sa.String(), nullable=True),
        sa.Column("creator_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("boughtitem", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_boughtitem_id"), ["id"], unique=True)
        batch_op.create_index(
            batch_op.f("ix_boughtitem_project"), ["project"], unique=False
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("boughtitem", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_boughtitem_project"))
        batch_op.drop_index(batch_op.f("ix_boughtitem_id"))

    op.drop_table("boughtitem")
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_username"))
        batch_op.drop_index(batch_op.f("ix_user_id"))
        batch_op.drop_index(batch_op.f("ix_user_full_name"))
        batch_op.drop_index(batch_op.f("ix_user_email"))

    op.drop_table("user")
    with op.batch_alter_table("emailnotification", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_emailnotification_id"))

    op.drop_table("emailnotification")
    with op.batch_alter_table("apikey", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_apikey_id"))

    op.drop_table("apikey")
    # ### end Alembic commands ###
